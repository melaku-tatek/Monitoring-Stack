# input {
#   tcp {
#     port => 5100
#     codec => json_lines
#   }
# }

# filter {
#   # Add any filters you need here
# }

# output {
#   elasticsearch {
#     hosts => ["elasticsearch:9200"]
#     index => "docker-logs-%{+YYYY.MM.dd}"
#   }
# }

input {
  tcp {
    port => 5000
    codec => plain {
      format => "%{message}"
    }
  }
}

filter {
  # Parse syslog format
  grok {
    match => { 
      "message" => "<%{POSINT:priority}>%{SYSLOGTIMESTAMP:syslog_timestamp} %{SYSLOGHOST:hostname} %{DATA:process}(?:\[%{POSINT:pid}\])?: %{LOGLEVEL:log_level} \[%{TIMESTAMP_ISO8601:app_timestamp}\] \[%{DATA:logger}\]: %{GREEDYDATA:log_message}" 
    }
    overwrite => ["message"]
  }

  # Set the correct timestamp (using your application's timestamp)
  date {
    match => ["app_timestamp", "ISO8601"]
    target => "@timestamp"
  }

  # Clean up fields
  mutate {
    remove_field => ["syslog_timestamp", "priority"]
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "docker-logs-%{+YYYY.MM.dd}"
  }
}